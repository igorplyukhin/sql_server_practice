USE master
GO 
IF  EXISTS (
	SELECT name 
		FROM sys.databases 
		WHERE name = N'KN302_Plyuhin'
)
ALTER DATABASE KN302_Plyuhin set single_user with rollback immediate
GO
IF  EXISTS (
	SELECT name 
		FROM sys.databases 
		WHERE name = N'KN302_Plyuhin'
)
DROP DATABASE KN302_Plyuhin
GO
CREATE DATABASE KN302_Plyuhin
GO
USE KN302_Plyuhin
GO
Create schema idz
GO
CREATE TABLE idz.Groups(
  Code_group integer PRIMARY KEY
, Name_group varchar(20)
, Num_course integer
, Name_speciality varchar(100)
)
GO
CREATE TABLE idz.Lectors(
  Code_lector integer PRIMARY KEY
, Name_lector varchar(50)
, Science varchar(50)
, Post varchar(50)
, Date_ date
)
GO
CREATE TABLE idz.Students(
  Code_stud varchar(20) PRIMARY KEY NOT NULL
, Code_group integer NOT NULL FOREIGN KEY REFERENCES idz.Groups(Code_group)
, Surname varchar(20) NOT NULL
, Name varchar(20) NOT NULL
, LastName varchar(20) NOT NULL
, Birthday date NOT NULL
, Phone numeric NOT Null)
GO
CREATE TABLE idz.Subjects(
  Code_subject integer PRIMARY KEY
, Name_subject varchar(50)
, Count_hours integer
)
GO
CREATE TABLE idz.Progress(
  Code_progress integer PRIMARY KEY
, Code_subject integer FOREIGN KEY REFERENCES idz.Subjects(Code_subject)
, Code_stud varchar(20) FOREIGN KEY REFERENCES idz.Students(Code_stud)
, Estimate integer
, Code_lector integer FOREIGN KEY REFERENCES idz.Lectors(Code_lector)
, Date_exam date
)
GO
INSERT INTO idz.Lectors VALUES
(1, 'lector1', 'нет', 'преподаватель', '20000301')
,(2, 'lector2', 'кандидат', 'доцент', '20000302')
,(3, 'lector3', 'доктор т.н.', 'профессор', '20000503')
,(4, 'lector4', 'нет', 'ассистент', '20100904')
,(5, 'lector5', 'кандидат т.н.', 'доцент', '20100905')
,(6, 'lector6', 'доктор', 'доцент', '20100906')
,(7, 'lector7', 'нет', 'преподаватель', '20100907')
,(8, 'lector8', 'кандидат', 'доцент', '20100908')
,(9, 'lector9', 'доктор', 'профессор', '20100909')
,(10, 'lector10', 'нет', 'преподаватель', '20100910')
,(11, 'lector11', 'кандидат т.н.', 'доцент', '20100911')
,(12, 'lector12', 'доктор т.н.', 'профессор', '20100912')
,(13, 'lector13', 'нет', 'преподаватель', '20100913')
,(14, 'lector14', 'кандидат', 'доцент', '20100914')

INSERT INTO idz.Subjects VALUES
(1, 'Философия', 100)
,(2, 'История', 100)
,(3, 'Физическая культура', 200)
,(4, 'Математика', 150)
,(5, 'Математическая экономика', 50)
,(6, 'Иностранный язык', 200)
,(7, 'Математический анализ', 50)
,(8, 'Правоведение', 50)
,(9, 'Высшая математика', 100)

INSERT INTO idz.Groups VALUES
(1, 'МЕН-190301', 1, 'Математика')
,(2, 'УГИЗ-450001', 4, 'Туризм')
,(3, 'РИ-349870', 3, 'Программная инженерия')
,(4, 'ЭН-245367', 2, 'Электротехника')
,(5, 'ЭУ-145360', 1, 'Экономика')
,(6, 'АС-234543', 2, 'Архитектура')
,(11, 'Ас-31', 3, 'Архитектура')
,(12, 'АС-5167', 5, 'Строительство')
GO
INSERT INTO idz.Students VALUES 
('1', 1, 'Коростелева', 'Ксения','Анатольевна','19920220', '9607771977')
,('АС-12-02', 2, 'Нестерова', 'Ольга','Борисовна','19760324', '9617771976')
,('ПИ-14-03', 3, 'Шайхиева', 'Альбина','Ахнафовна','19950321', '9627771975')
,('4', 4, 'Хмелевский', 'Николай','Николаевич','19940314', '9637771974')
,('5', 5, 'Докукин', 'Артур','Викторович','19930510', '9647771973')
,('6', 1, 'Земской', 'Игорь','Викторович','19860424', '220011')
,('7', 2, 'Цурина', 'Виктория','Денисовна','19770830', '9667771971')
,('8', 3, 'Кузьмин', 'Тимур','Вячеславович','19940308', '9677771970')
,('9', 4, 'Шамка', 'Виктория','Александровна','19941013', '9687771969')
,('10', 5, 'Шипина', 'Виктория','Игоревна','19940425', '9697771968')
,('11', 6, 'Синяева', 'Ксения','Анатольевна','19930814', '226066')
,('БИ-12-02', 2, 'Олива', 'Росальба','','19760624', '9717771966')
,('13', 3, 'Максимов', 'Ефим','Петрович','19921004', '9727771965')
,('14', 4, 'Васьков', 'Павел','Петрович','19941008', '9737771964')
,('15', 5, 'Васьков', 'Павел','Павлович','19940808', '9747771963')
,('16', 1, 'Карпачева', 'Оксана','Николаевна','19950307', '9757771962')
,('17', 2, 'Костыгова', 'Алина','Вадимовна','19770906', '9767771961')
,('18', 6, 'Егорова', 'Карина','Юрьевна','19940210', '225566')
,('19', 4, 'Шарыгина', 'Мария','Дмитриевна','19950429', '9787771959')
,('20', 5, 'Михайлов', 'Сергей','Владимирович','19941025', '9797771958')
,('21', 1, 'Никитин', 'Никита','Александрович','19960819', '9807771957')
,('22', 6, 'Перевалов', 'Михаил','Сергеевич','19860218', '9817771956')
,('23', 4, 'Путинцев', 'Иван','Евгеньевич','19930110', '9827771955')
,('24', 3, 'Андронова', 'Александра','Игоревна','19940915', '9837771954')
,('25', 4, 'Гилев', 'Сергей','Алексеевич','19951201', '9847771953')
,('26', 5, 'Мусина', 'Гульшат','Миннифатыховна','19930206', '9857771952')
,('27', 1, 'Шакирова', 'Надежда','Алексеевна','19950901', '9867771951')
,('28', 6, 'Одайкина', 'Екатерина','Олеговна','19931105', '9877771950')
,('29', 4, 'Живкова', 'Светлана','Дмитриевна','19931217', '9887771949')
,('30', 4, 'Безбородова', 'Ирина','Сергеевна','19930121', '9897771948')
,('31', 5, 'Ундольская', 'Полина','Андреевна','19940817', '9907771947')
,('32', 3, 'Доронина', 'Анастасия','Дмитриевна','19950825', '9917771946')
,('42', 11, 'Иванова', 'Татьяна','Петровна','19760303', '220677')
,('51', 11, 'Портнова', 'Анна','Ивановна','19771121', '225577')
,('45', 11, 'Иванов', 'Иван','Иванович','19771202', '227777')
,('АС-01', 12, 'Студент1', '','','19771203', '226650')
,('АС-02', 12, 'Студент2', '','','19771204', '226651')
,('АС-03', 12, 'Студент3', '','','19771205', '226652')
,('АС-04', 12, 'Студент4', '','','19771206', '226653')
,('АС-05', 12, 'Студент5', '','','19771207', '226654')
,('АС-06', 12, 'Студент6', '','','19771208', '226655')
,('АС-07', 12, 'Студент7', '','','19771209', '226656')
,('АС-08', 12, 'Студент8', '','','19771210', '226657')
,('АС-09', 12, 'Студент9', '','','19771211', '226658')
,('АС-10', 12, 'Студент10', '','','19771212', '226659')
,('АС-11', 12, 'Студент11', '','','19771213', '226660')
,('АС-12', 12, 'Студент12', '','','19771214', '226661')
,('АС-13', 12, 'Студент13', '','','19771215', '226662')
,('АС-14', 12, 'Студент14', '','','19771216', '226663')
,('АС-15', 12, 'Студент15', '','','19771217', '226664')
,('АС-16', 12, 'Студент16', '','','19771218', '226665')
,('АС-17', 12, 'Студент17', '','','19771219', '226666')
,('АС-18', 12, 'Студент18', '','','19771220', '226667')
,('АС-19', 12, 'Студент19', '','','19771221', '226668')
,('АС-20', 12, 'Студент20', '','','19771222', '226669')
,('АС-21', 12, 'Студент21', '','','19771223', '226670')
,('АС-22', 12, 'Студент22', '','','19771224', '226671')
,('АС-23', 12, 'Студент23', '','','19771225', '226672')
,('АС-24', 12, 'Студент24', '','','19771226', '226673')
,('АС-25', 12, 'Студент25', '','','19771227', '226674')
,('АС-26', 12, 'Студент26', '','','19771228', '226675')

INSERT INTO idz.Progress VALUES
(1, 4, '1', 1, 7, '20190601')
,(2, 3, 'АС-12-02', 2, 5, '20190505')
,(3, 2, 'ПИ-14-03', 3, 3, '20190301')
,(4, 1, '4', 4, 1, '20030111')
,(5, 5, '5', 5, 9, '20190605')
,(6, 8, '6', 6, 14, '20190612')
,(7, 7, '7', 7, 12, '20030121')
,(8, 6, '8', 8, 10, '20180501')
,(9, 3, '9', 1, 5, '20190505')
,(10, 9, '10', 2, 7, '20190601')
,(11, 1, '11', 3, 1, '20030111')
,(12, 2, 'БИ-12-02', 4, 3, '20190301')
,(13, 8, '13', 5, 14, '20190612')
,(14, 5, '14', 6, 9, '20190605')
,(15, 6, '15', 7, 10, '20180501')
,(16, 7, '16', 8, 12, '20190401')
,(17, 9, '17', 1, 3, '20030115')
,(18, 1, '18', 2, 1, '20030111')
,(19, 4, '19', 3, 7, '20190601')
,(20, 3, '20', 4, 5, '20190505')
,(21, 7, '21', 5, 12, '20190401')
,(22, 6, '22', 6, 10, '20180501')
,(23, 5, '23', 7, 9, '20190605')
,(24, 8, '24', 8, 14, '20190612')
,(25, 4, '25', 1, 7, '20190601')
,(26, 3, '26', 2, 5, '20190505')
,(27, 2, '27', 3, 3, '20190301')
,(28, 1, '28', 4, 1, '20030111')
,(29, 9, '29', 5, 9, '20190605')
,(30, 8, '30', 6, 14, '20190612')
,(31, 7, '31', 7, 12, '20030121')
,(32, 6, '32', 8, 11, '20180502')
,(33, 5, '1', 1, 9, '20190605')
,(34, 8, 'АС-12-02', 2, 14, '20190612')
,(35, 7, 'ПИ-14-03', 3, 12, '20190401')
,(36, 6, '4', 4, 11, '20180502')
,(37, 4, '5', 5, 7, '20190601')
,(38, 3, '6', 6, 5, '20190505')
,(39, 2, '7', 7, 3, '20190301')
,(40, 1, '8', 8, 1, '20030111')
,(41, 9, '9', 1, 7, '20030115')
,(42, 3, '10', 2, 5, '20190505')
,(43, 2, '11', 3, 3, '20190301')
,(44, 1, 'БИ-12-02', 4, 1, '20030111')
,(45, 5, '13', 5, 9, '20190605')
,(46, 8, '14', 6, 14, '20190612')
,(47, 7, '15', 7, 12, '20190401')
,(48, 6, '16', 8, 11, '20180502')
,(49, 8, '17', 1, 14, '20190612')
,(50, 7, '18', 2, 12, '20190401')
,(51, 6, '19', 3, 11, '20180502')
,(52, 5, '20', 4, 9, '20190605')
,(53, 1, '21', 5, 2, '20030131')
,(54, 4, '22', 6, 8, '20190601')
,(55, 3, '23', 7, 5, '20190505')
,(56, 2, '24', 8, 4, '20190402')
,(57, 7, '25', 1, 12, '20030121')
,(58, 6, '26', 2, 11, '20180502')
,(59, 5, '27', 3, 9, '20190605')
,(60, 8, '28', 4, 14, '20190613')
,(61, 2, '29', 5, 4, '20190402')
,(62, 1, '30', 6, 2, '20030131')
,(63, 4, '31', 7, 8, '20190601')
,(64, 3, '32', 8, 6, '20190405')
,(65, 6, '1', 1, 11, '20180502')
,(66, 5, 'АС-12-02', 2, 9, '20190605')
,(67, 8, 'ПИ-14-03', 3, 14, '20190613')
,(68, 7, '4', 4, 13, '20190401')
,(69, 3, '5', 5, 6, '20190405')
,(70, 2, '6', 6, 4, '20190402')
,(71, 1, '7', 7, 2, '20030131')
,(72, 4, '8', 8, 8, '20190601')
,(73, 4, '9', 1, 8, '20190601')
,(74, 4, '10', 2, 8, '20190601')
,(75, 3, '11', 3, 6, '20190405')
,(76, 3, 'БИ-12-02', 4, 6, '20190405')
,(77, 2, '13', 5, 4, '20190402')
,(78, 2, '14', 6, 4, '20190402')
,(79, 1, '15', 7, 2, '20030131')
,(80, 1, '16', 8, 2, '20030131')
,(81, 5, '17', 1, 9, '20190605')
,(82, 5, '18', 2, 9, '20190605')
,(83, 6, '19', 3, 11, '20180502')
,(84, 6, '20', 4, 11, '20180502')
,(85, 7, '21', 5, 13, '20190401')
,(86, 7, '22', 6, 13, '20190401')
,(87, 8, '23', 7, 14, '20190613')
,(88, 8, '24', 8, 14, '20190613')
,(89, 4, '25', 1, 8, '20190601')
,(90, 3, '26', 2, 6, '20190405')
,(91, 2, '27', 3, 4, '20190402')
,(92, 1, '28', 4, 2, '20030131')
,(93, 5, '29', 5, 9, '20190605')
,(94, 8, '30', 6, 14, '20190613')
,(95, 7, '31', 7, 13, '20190401')
,(96, 6, '32', 8, 11, '20180502')
,(97, 1, '42', 5, 3, '20030115')
,(98, 3, '51', 5, 1, '20030116')
,(99, 6, '45', 5, 2, '20030117')

--69. Вывести все сведения о студентах из таблицы Students таким
--образом, чтобы в результате порядок столбцов был следующим:
--Code_group, Name, Surname, Lastname, Phone, Birthday.
SELECT
Code_group as 'Номер группы'
, Name as 'Имя'
, Surname as 'Фамилия'
, LastName as 'Отчество'
, Phone as 'Номер телефона'
, FORMAT(Birthday, 'D', 'ru-RU') as 'День рождения' 
FROM idz.Students

--74. Вывести список преподавателей (поле Name_lector) из таблицы
--Lectors с ученой степенью кандидат каких-либо наук, т.е. у которых
--значение поля Science начинается с ‘к’. like(к%)
SELECT Name_lector as 'Имя преподавателя' from idz.Lectors WHERE Science LIKE('%кандидат%')

--79. Вывести все сведения о всех предметах из таблицы Subjects, кроме
--предмета ‘высшая математика’ (условие по полю Name_subject). 
SELECT * FROM idz.Subjects WHERE Name_subject != 'высшая математика'

--84. Вывести список групп и названия специальностей (поля
--Name_group и Name_speciality из таблицы Groups), в которых учатся
--студенты со следующими номерами зачетной книжки ‘АС-12-02’, ‘ПИ-14-
--03’, ‘АС-21-03’, ‘БИ-12-02’ (условие по полю Code_stud из таблицы
--Students). 
SELECT Name_group, Name_speciality 
FROM idz.Groups G INNER JOIN idz.Students S ON G.Code_group = S.Code_group 
WHERE S.Code_stud = 'АС-12-02' 
	OR S.Code_stud = 'ПИ-14-03' 
	OR S.Code_stud = 'АС-21-03' 
	OR S.Code_stud = 'БИ-12-02'


--89. Выбрать список групп (поле Name_group) из таблицы Groups, у
--которых значение оканчивается на ‘0’ (ноль).
SELECT Name_group FROM idz.Groups WHERE Name_group LIKE('%0')

--94. Вывести список студентов (поля Surname, Name из таблицы
--Students) и номер курса (поле Num_course из таблицы Groups), учащихся в
--группе ‘Ас-31’ (условие по полю Name_group). 
SELECT Surname, Name, Num_course 
FROM idz.Groups G INNER JOIN idz.Students S ON G.Code_group = S.Code_group 
WHERE G.Name_group = 'Ас-31'

--99. Вывести список всех студентов (поля Surname, Name, Lastname из
--таблицы Students) и номер курса, на котором они занимаются, а также
--количество лет оставшейся учебы (использовать поле Num_course из
--таблицы Groups). 
SELECT Surname, Name, LastName, Num_course, 6 - Num_course as 'Колво оставшихся лет учебы'
FROM idz.Groups G INNER JOIN idz.Students S ON G.Code_group = S.Code_group 

--104. Вывести список групп (поле Name_group из таблицы Groups) и
--количество студентов в каждой группе (по любому полю из таблицы
--Students), поместив результат в новое поле Count_Students. 
SELECT Name_group, (SELECT COUNT(*) FROM idz.Students S WHERE S.Code_group = G.Code_group) as 'Count_Students'FROM idz.Groups G

--109. Вывести список студентов (поля Surname, Name, Lastname) и
--названия их групп (поле Name_group) для значений кодов групп (поле
--Code_group), находящихся в диапазоне, хранящемся в переменных
--Group_begin и Group_end.
--Например, пусть Group_begin = 12, а Group_end = 35
DECLARE @Group_begin integer = 1
DECLARE @Group_end integer = 3
SELECT Surname, Name, LastName, Name_group
FROM idz.Groups G INNER JOIN idz.Students S ON G.Code_group = S.Code_group 
WHERE S.Code_group <= @Group_end 
	AND S.Code_group >= @Group_begin
GO
--114. Вывести список групп и специальности (поля Name_group,
--Name_speciality из таблицы Groups), у которых номер курса = 2 (условие
--по полю Num_course), поместить результат в курсор с названием Temp2.
DECLARE Temp2 CURSOR FOR
SELECT * FROM idz.Groups WHERE Num_course = 2
GO

--119. Вывести список студентов (поля Surname, Name, Lastname из
--таблицы Students), которые сдали все экзамены без двоек (подзапрос по
--таблице Progress).
SELECT Surname, Name, LastName FROM idz.Students S WHERE (SELECT Count(*) FROM  idz.Progress P WHERE S.Code_stud = P.Code_stud AND P.Estimate <= 2) = 0
GO
--124. Изменить в таблице Subjects значение поля Name_subject на
--‘математический анализ’, если название дисциплины – ‘высшая
--математика’. 
SELECT * FROM idz.Subjects
UPDATE idz.Subjects SET Name_subject = 'математический анализ' WHERE Name_subject = 'высшая математика'
GO
--129. Удалить из таблицы Subjects все записи, в которых в поле
--Name_subject нет данных или в поле содержится пустое значение.
DELETE FROM idz.Subjects WHERE Name_subject = '' OR Name_subject IS NULL
GO

--139. Создать триггер для команды DELETE таблицы Progress,
--который удаляет преподавателя, если для него больше нет записей.

CREATE TRIGGER delete_empty_lector ON idz.Progress AFTER DELETE
AS
	DECLARE @deleted_lector_id integer = (SELECT TOP 1 Code_lector FROM deleted)
	IF (SELECT COUNT(*) FROM idz.Progress WHERE Code_lector = @deleted_lector_id) = 0
	BEGIN
		DELETE FROM idz.Lectors WHERE Code_lector = @deleted_lector_id
	END
GO
--149. Создать процедуру, которая для указанного студента выводит
--информацию об успеваемости: Дата, Преподаватель, Дисциплина, Оценка,
--отсортированную по дате, дисциплина, по каждой дисциплине показать
--оценка выше средней по группе или нет.
CREATE FUNCTION idz.GetAverageMark(@subjectId integer, @groupId integer)
RETURNS integer 
AS
BEGIN
	RETURN (
	SELECT AVG(P.Estimate) 
	FROM idz.Progress P
	INNER JOIN idz.Students S ON S.Code_stud = P.Code_stud
	INNER JOIN idz.Groups G ON S.Code_group = G.Code_group
	WHERE G.Code_group = @groupId AND P.Code_subject = @subjectId
	)
END
GO

CREATE PROCEDURE idz.PrintUsp(@CodeStud Varchar(20))
AS
BEGIN
SELECT 
FORMAT(P.Date_exam, 'D', 'ru-RU') as 'Дата'
, l.Name_lector as 'Лектор'
, SUB.Name_subject as 'Предмет'
, (S.Surname + ' ' + S.Name + ' ' + S.LastName) as 'ФИО'
, P.Estimate as 'Оценка'
, idz.GetAverageMark(SUB.Code_subject, G.Code_group) as 'Средняя оценка'
FROM idz.Progress P
INNER JOIN idz.Students S ON S.Code_stud = P.Code_stud
INNER JOIN idz.Lectors L ON  L.Code_lector = p.Code_lector
INNER JOIN idz.Subjects SUB ON SUB.Code_subject = P.Code_subject
INNER JOIN idz.Groups G ON G.Code_group = S.Code_group
WHERE S.Code_stud = @CodeStud
ORDER BY P.Date_exam DESC
END
GO

EXECUTE idz.PrintUsp 'АС-15'
GO